# rr

# WHAT

shell script manager and runner inspired by rerun[1], bashing[2] and drist[3]

[1] https://github.com/rerun/rerun  
[2] https://github.com/xsc/bashing  
[3] git://bitreich.org/drist  

# WHY

CFEngine, Puppet, Chef and others did not offer tangible advantages over a combination of rerun/bashing + drist. Cons mostly outweight the pros. Slow and complicated are the common complaints.

According to the Lindy effect, shell scripts, openssh and tar will outlive these mentioned CM software.

I tried building by own Lua-based configuration management software but found the oneshot nature of shell scripts more convenient.

# BUILDING

Requires [OmniaJIT](https://github.com/tongson/OmniaJIT/) to build.  
Rename rr.mk to Makefile then `make`.

# TUTORIAL

In the source tree, the *TUTORIAL* directory contains a hierarchy that persistently enables IP forwarding through sysctl upon the remote SSH host named *avocado*

    cd TUTORIAL
    rr avocado sysctl:apply

Steps that `rr` performs:

1. Copy via sftp `.files-avocado/` to `avocado:/`
2. Generates the script:

```
#!/bin/sh
unset IFS
set -efu
PATH=/bin:/sbin:/usr/bin:/usr/sbin
LC_ALL=C
sysctl --system
```

3. Runs the script on host avocado via SSH.

# REFERENCE

### Invocation
    
    rr avocado sysctl:apply --quiet --names
        ^       ^     ^       ^
        host    group script  arguments

### Hierarchy

    TOPLEVEL
    ├── .files                          <--- synced to any host
    ├── .files-avocado                  <--- synced to the avocado host
    ├── .lib                            <--- sourced by all scripts
    └── group 
        ├── .files                      <--- synced to any host when group:* is called
        ├── .files-avocado              <--- synced to the avocado host then group:* is called
        ├── .lib                        <--- sourced along with group:* scripts
        └── script

### Notes

Tested on Linux only.  

Remote host only requires OpenSSH installed. It's recommended that the host running `rr` should configure remote hosts through `~/.ssh/config`.  

Requires OpenSSH 4.7+ for sftp recursive file transfers. If you can't use 4.7+, a workaround is to use heredocs.  

Scripts should specify `$@` if it wants to use arguments passed.


